server:
  port: 8080

spring:
  profiles:
    active: prod
    main:
      debug: true

    jackson:
      date-format: yyyy-MM-dd'T'HH:mm:ss
      serialization:
        write-dates-as-timestamps: false
      time-zone: Asia/Seoul


    datasource:
      url: ${DB_URL}
      username: ${DB_USER_NAME}
      password: ${DB_PASSWORD}
      hikari:
        max-lifetime: 177000  # 177초, hikari는 RDS wait_timeout(180초) 보다 2 ~ 3초 정도 짧게 줄 것을 권장
      driver-class-name: com.mysql.cj.jdbc.Driver
    # 환경 변수를 사용하는 데이터베이스 설정 (주석 해제 필요시)  # datasource:
    # 태태 로컬 데이터베이스 설정
    #  datasource:
    #    url: jdbc:mysql://localhost:3306/bigbrother
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    username: root
    #    password: 1234

    #   상윤 로컬 데이터베이스 설정
    #  datasource:
    #    url: jdbc:mysql://localhost:3306/big_brother
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    username: root
    #    password: 1234

    mail:
      host: smtp.gmail.com
      port: 587
      username: ${GOOGLE_ACCOUNT}
      password: ${APP_PASSWORD}
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
              required: true
            connectiontimeout: 5000
            timeout: 5000
            writetimeout: 5000

        auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분

    jpa:
      hibernate:
        ddl-auto: create-drop
      properties:
        hibernate:
          format_sql: true
          show_sql: true

    data:
      redis:
        port: 6379
        host: localhost

    servlet:
      multipart:
        enabled: true
        max-request-size: 300MB
        max-file-size: 300MB


  jwt:
    secret: ${JWT_SECRET}

  cloud:
    aws:
      s3:
        bucket: big-brother-storage
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ap-northeast-2
      stack:
        auto: false

  ssh:
    remote-host: ${SSH_REMOTE_HOST}
    ssh-port: 22
    user-name: ${SSH_USER_NAME}
    private-key-path: ${SSH_PRIVATE_KEY_PATH}

